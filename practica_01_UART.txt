#include <msp430.h>

char cadena[10] = "Texto\n";
int i = 0;
int main(void)
{
  WDTCTL = WDTPW + WDTHOLD;                 // Stop Watch Dog timer

  P4SEL |= BIT5+BIT4;                       // P4.5,4.4  tx,rx

  P2DIR &= ~BIT1;                           //boton 2.1 como entrada
  P2REN |= BIT1;                              //habilito una resistencia interna
  P2OUT |= BIT1;                            //conecto resistencia a Vcc (pull-up)

  //UCA1CTL0 |= UCSWRST;
  //UCA1CTL0 |= UCPEN + UCPAR + UCSPB;
  //UCA1CTL0 &= ~UCSWRST;
  UCA1CTL1 |= UCSWRST;                      // Reset de la maquina de estados



  UCA1CTL1 |= UCSSEL_2;                     // SMCLK
  UCA1BR0 = 9;                              // 115200 baudios
  UCA1BR1 = 0;                              //
  UCA1MCTL |= UCBRS_1 + UCBRF_0;            // Modulacion UCBRSx=1, UCBRFx=0

  UCA1CTL1 &= ~UCSWRST;                     // Inicializar la maquina de estados


  P2IE |= BIT1;                             //hablitamos interrupcion en P2.1
  P2IES|= BIT1;                             //seleccionamos flanco de bajada
  UCA1IE |= UCRXIE;                         // habilita interrupcion USCI_A1 al recibir



  __bis_SR_register(LPM0_bits + GIE);       //
  __no_operation();                         //
}

#pragma vector=USCI_A1_VECTOR
__interrupt void USCI_A1_ISR(void)
{
    while (!(UCA1IFG & UCTXIFG));             // buffer listo?
    UCA1TXBUF = UCA1RXBUF ;               // tx = rx, hace eco del caracter

    }

#pragma vector=PORT2_VECTOR
__interrupt void Boton (void)
{
    __delay_cycles(10000);
    while(cadena[i]!='\0')
        {
            while (!(UCA1IFG&UCTXIFG));           
            {
                UCA1TXBUF = cadena[i];                  
                i++;
            }
        }
    i = 0;
    P2IFG &= ~BIT1;
}

